#######################
# TRAINING PARAMETERS #
#######################

# number of pixels in each spectrum
NUM_PX: 1001
# shape of the first convolutional layer [1, kernel_width (px), 1, num_kernels]
CONV1_SHAPE: 1, 45, 1, 10
# output dimensions of each fully-connected layer
FC1_OUTDIM: 128
FC2_OUTDIM: 128
NUM_OUTS: 5

# learning rate for first stage of training
LEARN_RATE1: 5e-5
# number of iterations for first stage of training
NUM_TRAIN_ITERS1: 13000
# batch size for first stage of training
BATCH_SIZE1: 100
# probability to retain node during first stage of training
KEEP_PROB1: 0.8

# flag to control second stage (YES/NO)
DO_TRAIN2: YES
# learning rate for second stage of training
LEARN_RATE2: 1e-6
# number of iterations for second stage of training
NUM_TRAIN_ITERS2: 2000
# batch size for second stage of training
BATCH_SIZE2: 100
# probability to retain node during second stage of training
KEEP_PROB2: 1.0

# preprocess training data with random offsets given below
PREPROCESS_TRAIN: YES
# relative continuum error bounds to sample between during training
REL_CONT_E_TRAIN: -0.010, 0.010
# signal-to-noise bounds to sample between during training
SN_RANGE_TRAIN: 175.0, 250.0
# template containing relative signal-to-noise profile
SN_TEMPLATE: sn.robo.template
# number of examples to fetch and preprocess for training at once
NUM_FETCH: 1000

# binary file containing training data
TRAINING_DATA: allspec_test_200_600
# folder to save/load model
SAVE_LOC: ../repo_runfiles/example_model/

# names of the output parameters (must be same number as NUM_OUTS)
OUTPUT_NAMES: temperature, gravity, metallicity, microturb, rotvel
# minimum values of OUTPUT_NAMES, in order listed
MIN_PARAMS: 4000.0, 2.7, -0.5, 0.0, 0.0
# minimum values of OUTPUT_NAMES, in order listed
MAX_PARAMS: 7000.0, 4.8, 0.2, 3.0, 40.0

# interval (in batches) between printing cost and writing to logfiles
SAMPLE_INTERVAL: 50
# number of preprocessing threads
PP_THREADS: 1
# preprocessing max queue depth
MAX_PP_DEPTH: 200000
# folder to save log files
LOG_LOC: ../repo_runfiles/
# output a .json timeline indicating various execution times (YES/NO)
TIMELINE_OUTPUT: NO
# log weight, cost, and graph information in the log directory for tensorboard
TBOARD_OUTPUT: YES

# perform cross-validation during training
TRAINING_XVAL: YES
# cross-validation dataset location (binary)
XVAL_DATA: allspec_test_200_600
# size of cross-validation set to construct (same set every time)
XVAL_SIZE: 500
# number of threads to spawn for cross-validation construction
XV_THREADS: 1
# preprocess cross-validation set using training preprocessing parameters
PREPROCESS_XVAL: YES

# early stopping toggle (will use the xval set if specified, otherwise will use the current batch)
EARLY_STOP: YES
# number of sampling intervals cost must improve within
ES_SAMPLE: 100

######################
# TESTING PARAMETERS #
######################

# location frozen model to load
TEST_MODEL_LOC: ../repo_runfiles/example_model/

# location to save summary file
TEST_SAVE_LOC: ../repo_runfiles/

# binary file containing testing data
TESTING_DATA: allspec_test_200_600

# preprocess testing data with random offsets given below
PREPROCESS_TEST: YES
# relative continuum error bounds to sample between during training
REL_CONT_E_TEST: -0.010, 0.010
# signal-to-noise bounds to sample between during training
SN_RANGE_TEST: 175.0, 250.0
# template containing relative signal-to-noise profile
SN_TEMPLATE_TEST: sn.robo.template


########################
# INFERENCE PARAMETERS #
########################

# format to use to read in inference data: DEBUG, MS_FITS, TEXT
INFER_MODE: TEXT

# if debug mode used, input binary data file
DEBUG_DATA: allspec_test_200_600

# if ms_fits mode used, multispec image to run inference on
MS_FITS_IMAGE: jun2011_3133.fits

# if text mode used, text file with wavelength, flux columns
TEXT_IMAGE: wavelength.template

# text file with spectrum [wavelength, flux] to use as interpolation template (for ms or text mode)
WAVE_TEMPLATE: wavelength.template

# location frozen model to load
INFER_MODEL_LOC: ../repo_saved_models/example_model/

# location to save summary file
INFER_SAVE_LOC: ../repo_logs/




